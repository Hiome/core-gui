{"version":3,"sources":["webpack:///./src/pages/settings/index.js","webpack:///./src/components/SettingsMenu.js","webpack:///empty/style/index.jsx"],"names":["DoorIndexPage","state","sensors","loading","componentDidMount","_this2","this","props","location","justDeleted","antd_lib_message__WEBPACK_IMPORTED_MODULE_10___default","a","success","navigate","pathname","replace","setState","fetch","process","then","resp","json","renderDoor","react__WEBPACK_IMPORTED_MODULE_13___default","createElement","width","height","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","d","id","points","cx","cy","rx","ry","renderSensors","style","textAlign","antd_lib_spin__WEBPACK_IMPORTED_MODULE_6___default","size","indicator","antd_lib_icon__WEBPACK_IMPORTED_MODULE_8___default","type","length","map","sensor","gatsby__WEBPACK_IMPORTED_MODULE_12__","to","className","key","title","name","antd_lib_empty__WEBPACK_IMPORTED_MODULE_3___default","image","imageStyle","description","render","_components_Layout__WEBPACK_IMPORTED_MODULE_15__","_components_SettingsMenu__WEBPACK_IMPORTED_MODULE_14__","page","marginTop","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","shape","icon","onClick","PureComponent","SettingsMenu","_ref","react__WEBPACK_IMPORTED_MODULE_3___default","antd_lib_menu__WEBPACK_IMPORTED_MODULE_1___default","selectedKeys","mode","Item","gatsby__WEBPACK_IMPORTED_MODULE_2__","propTypes","PropTypes","string","isRequired","__webpack_require__"],"mappings":"4SASMA,8JACJC,MAAQ,CACNC,QAAS,GACTC,SAAS,yCAGXC,kBAAA,WAAoB,IAAAC,EAAAC,KAClB,GAAIA,KAAKC,MAAMC,SAASP,OAASK,KAAKC,MAAMC,SAASP,MAAMQ,YAAa,CACtEC,EAAAC,EAAQC,QAAWN,KAAKC,MAAMC,SAASP,MAAMQ,YAA7C,8BAEA,IAAIR,EAAQK,KAAKC,MAAMC,SAASP,aACzBA,EAAMQ,YACbI,YAASP,KAAKC,MAAMC,SAASM,SAAU,CAACb,QAAOc,SAAS,IAG1DT,KAAKU,SAAS,CAACb,SAAS,IACxBc,MAASC,4BACNC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GAAI,OAAIf,EAAKW,SAAS,CAACd,QAASkB,EAAMjB,SAAS,SAGzDmB,WAAA,WACE,OACEC,EAAAZ,EAAAa,cAAA,OAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,6BAA6BC,WAAW,gCAC9GP,EAAAZ,EAAAa,cAAA,KAAGO,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpDX,EAAAZ,EAAAa,cAAA,SACED,EAAAZ,EAAAa,cAAA,QAAMW,EAAE,cAAcC,GAAG,QAAQL,OAAO,UAAUC,YAAY,MAC9DT,EAAAZ,EAAAa,cAAA,QAAMW,EAAE,kBAAkBC,GAAG,QAAQL,OAAO,UAAUC,YAAY,MAClET,EAAAZ,EAAAa,cAAA,YAAUY,GAAG,QAAQL,OAAO,UAAUC,YAAY,IAAIK,OAAO,wBAC7Dd,EAAAZ,EAAAa,cAAA,QAAMW,EAAE,kGAAkGC,GAAG,QAAQH,KAAK,UAAUC,SAAS,YAC7IX,EAAAZ,EAAAa,cAAA,WAASY,GAAG,OAAOL,OAAO,UAAUC,YAAY,IAAIM,GAAG,OAAOC,GAAG,OAAOC,GAAG,MAAMC,GAAG,YAO9FC,cAAA,WACE,OAAIpC,KAAKL,MAAME,QACNoB,EAAAZ,EAAAa,cAAA,OAAKmB,MAAO,CAACC,UAAW,WAAWrB,EAAAZ,EAAAa,cAAAqB,EAAAlC,EAAA,CAAMmC,KAAK,QAAQC,UAAWxB,EAAAZ,EAAAa,cAAAwB,EAAArC,EAAA,CAAMsC,KAAK,eAC1E3C,KAAKL,MAAMC,QAAQgD,OAAS,EAC9B5C,KAAKL,MAAMC,QAAQiD,IAAI,SAAAC,GAAM,OAAI7B,EAAAZ,EAAAa,cAAC6B,EAAA,EAAD,CAAMC,GAAE,kBAAoBF,EAAOhB,GACnEmB,UAAU,cAAcC,IAAG,SAAWJ,EAAOhB,GAC7CqB,MAAOL,EAAOM,MAAQN,EAAOM,QAGnCnC,EAAAZ,EAAAa,cAAAmC,EAAAhD,EAAA,CAAOiD,MAAOtD,KAAKgB,aAAcuC,WAAY,CAACnC,OAAQ,IAAKoC,YAAa,uBAK9EC,OAAA,WACE,OACExC,EAAAZ,EAAAa,cAACwC,EAAA,EAAD,CAAQP,MAAM,YACZlC,EAAAZ,EAAAa,cAACyC,EAAA,EAAD,CAAcC,KAAK,UAEjB5D,KAAKoC,gBAEPnB,EAAAZ,EAAAa,cAAA,OAAKmB,MAAO,CAACC,UAAS,SAAYuB,UAAS,SACzC5C,EAAAZ,EAAAa,cAAA4C,EAAAzD,EAAA,CAAQsC,KAAK,UAAUoB,MAAM,QAAQC,KAAK,OAAOxB,KAAK,QAAQyB,QAAS,kBAAM1D,YAAS,kBAAtF,sBA3DkB2D,kBAkEbxE,4GCtETyE,EAAe,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,KAAH,OACnBS,EAAAhE,EAAAa,cAAAoD,EAAAjE,EAAA,CAAMkE,aAAc,CAACX,GAAOY,KAAK,cAC/BH,EAAAhE,EAAAa,cAAAoD,EAAAjE,EAAMoE,KAAN,CAAWvB,IAAI,SACbmB,EAAAhE,EAAAa,cAACwD,EAAA,EAAD,CAAM1B,GAAG,aAAT,UAEFqB,EAAAhE,EAAAa,cAAAoD,EAAAjE,EAAMoE,KAAN,CAAWvB,IAAI,SACbmB,EAAAhE,EAAAa,cAACwD,EAAA,EAAD,CAAM1B,GAAG,mBAAT,UAEFqB,EAAAhE,EAAAa,cAAAoD,EAAAjE,EAAMoE,KAAN,CAAWvB,IAAI,WACbmB,EAAAhE,EAAAa,cAACwD,EAAA,EAAD,CAAM1B,GAAG,kCAAT,YAEFqB,EAAAhE,EAAAa,cAAAoD,EAAAjE,EAAMoE,KAAN,CAAWvB,IAAI,OACbmB,EAAAhE,EAAAa,cAACwD,EAAA,EAAD,CAAM1B,GAAG,8BAAT,QAEFqB,EAAAhE,EAAAa,cAAAoD,EAAAjE,EAAMoE,KAAN,CAAWvB,IAAI,SACbmB,EAAAhE,EAAAa,cAACwD,EAAA,EAAD,CAAM1B,GAAG,gCAAT,YAKNmB,EAAaQ,UAAY,CACvBf,YAAMgB,EAAUC,OAAOC,YAGVX,wCC7BfY,EAAA,KACAA,EAAA","file":"component---src-pages-settings-index-js-c981564f994f569eb11f.js","sourcesContent":["import { navigate, Link } from 'gatsby'\nimport { Button, Icon, Spin, Empty, message } from 'antd'\nimport React, { PureComponent } from 'react'\n\nimport SettingsMenu from \"../../components/SettingsMenu\"\nimport Layout from \"../../components/Layout\"\n\nimport \"../rooms.css\"\n\nclass DoorIndexPage extends PureComponent {\n  state = {\n    sensors: [],\n    loading: true\n  }\n\n  componentDidMount() {\n    if (this.props.location.state && this.props.location.state.justDeleted) {\n      message.success(`${this.props.location.state.justDeleted} was successfully deleted.`)\n      // clear justDeleted state so we don't keep seeing it\n      let state = this.props.location.state\n      delete state.justDeleted\n      navigate(this.props.location.pathname, {state, replace: true})\n    }\n\n    this.setState({loading: true})\n    fetch(`${process.env.API_URL}api/1/sensors?type=door`)\n      .then(resp => resp.json())\n      .then(resp => this.setState({sensors: resp, loading: false}))\n  }\n\n  renderDoor() {\n    return (\n      <svg width=\"52px\" height=\"64px\" viewBox=\"0 0 52 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g>\n            <path d=\"M9,58 L0,58\" id=\"Shape\" stroke=\"#000000\" strokeWidth=\"2\"></path>\n            <path d=\"M52,58 L36.1,58\" id=\"Shape\" stroke=\"#000000\" strokeWidth=\"2\"></path>\n            <polyline id=\"Shape\" stroke=\"#000000\" strokeWidth=\"2\" points=\"9 58 9 1 43 1 43 58\"></polyline>\n            <path d=\"M10,2.4 L35.1,6.7 L35.1,61.6 L10,57.3 L10,2.4 L10,2.4 Z M8,0 L8,59 L37.1,64 L37.1,5 L8,0 L8,0 Z\" id=\"Shape\" fill=\"#000000\" fillRule=\"nonzero\"></path>\n            <ellipse id=\"Oval\" stroke=\"#000000\" strokeWidth=\"2\" cx=\"29.7\" cy=\"31.6\" rx=\"1.8\" ry=\"2\"></ellipse>\n          </g>\n        </g>\n      </svg>\n    )\n  }\n\n  renderSensors() {\n    if (this.state.loading) {\n      return <div style={{textAlign: 'center'}}><Spin size=\"large\" indicator={<Icon type=\"loading\" />} /></div>\n    } else if (this.state.sensors.length > 0) {\n      return this.state.sensors.map(sensor => <Link to={`/settings/door/${sensor.id}`}\n              className='room active' key={`sensor${sensor.id}`}\n              title={sensor.name}>{ sensor.name }</Link>)\n    } else {\n      return (\n        <Empty image={this.renderDoor()} imageStyle={{height: 80}} description={\"No doors found.\"} />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Layout title=\"Settings\">\n        <SettingsMenu page=\"doors\" />\n\n        { this.renderSensors() }\n\n        <div style={{textAlign: `center`, marginTop: `40px`}}>\n          <Button type=\"primary\" shape=\"round\" icon=\"plus\" size=\"large\" onClick={() => navigate('/sensors/add')}>Add New Door</Button>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default DoorIndexPage\n","import { Link } from \"gatsby\"\nimport { Menu } from \"antd\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst SettingsMenu = ({ page }) => (\n  <Menu selectedKeys={[page]} mode=\"horizontal\">\n    <Menu.Item key=\"doors\">\n      <Link to=\"/settings\">Doors</Link>\n    </Menu.Item>\n    <Menu.Item key=\"rooms\">\n      <Link to=\"/settings/rooms\">Rooms</Link>\n    </Menu.Item>\n    <Menu.Item key=\"homekit\">\n      <Link to=\"/settings/integrations/homekit\">HomeKit</Link>\n    </Menu.Item>\n    <Menu.Item key=\"hue\">\n      <Link to=\"/settings/integrations/hue\">Hue</Link>\n    </Menu.Item>\n    <Menu.Item key=\"ifttt\">\n      <Link to=\"/settings/integrations/ifttt\">IFTTT</Link>\n    </Menu.Item>\n  </Menu>\n)\n\nSettingsMenu.propTypes = {\n  page: PropTypes.string.isRequired\n}\n\nexport default SettingsMenu\n","import '../../style/index.less';\nimport './index.less';\n"],"sourceRoot":""}