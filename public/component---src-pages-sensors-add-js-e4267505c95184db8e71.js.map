{"version":3,"sources":["webpack:///./src/pages/sensors/add.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["AddSensorPage","state","id","settingRoom1","room1","room1_name","room2","room2_name","rooms","updateRoom","e","room_id","target","value","room_name","options","selectedIndex","text","_this","prompt","Date","now","fetch","process","method","headers","Accept","Content-Type","body","JSON","stringify","name","occupancy_count","push","setState","nextRoom","saveSensor","_callee","room1_id","room2_id","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","a","wrap","_context","prev","next","type","then","resp","window","location","href","stop","componentDidMount","_callee2","params","json","_context2","URL","document","searchParams","this","get","sent","formQuestion","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","htmlFor","renderButton","onClick","renderRoomOptions","arr","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","length","done","r","key","renderExternalOption","renderRoomForm","onChange","render","_components_layout__WEBPACK_IMPORTED_MODULE_9__","_components_seo__WEBPACK_IMPORTED_MODULE_10__","title","style","textAlign","margin","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","defaultProps","arrayOf","Header","siteTitle","react_default","background","marginBottom","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","fontSize","Layout","Fragment","header","paddingTop","getFullYear","_755544856","node"],"mappings":"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","file":"component---src-pages-sensors-add-js-e4267505c95184db8e71.js","sourcesContent":["import React, { Component } from 'react'\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\n\nclass AddSensorPage extends Component {\n  state = {\n    id: null,\n    settingRoom1: true,\n    room1: null,\n    room1_name: null,\n    room2: null,\n    room2_name: null,\n    rooms: []\n  }\n\n  async componentDidMount() {\n    const params = (new URL(document.location)).searchParams\n    this.setState({id: params.get('id'), room1: params.get('r1'), room2: params.get('r2')})\n    const json = await fetch(`${process.env.API_URL}api/rooms`).then(resp => resp.json())\n    this.setState({rooms: json})\n  }\n\n  updateRoom = (e) => {\n    let room_id = e.target.value\n    let room_name = e.target.options[e.target.selectedIndex].text\n    const rooms = this.state.rooms\n    if (room_id === \"null\") {\n      room_id = null\n      room_name = null\n    }\n    if (room_id === \"new\") {\n      room_name = prompt(\"What is the name of this room?\", \"Living Room\")\n      if (!room_name) return\n      room_id = Date.now() / 1000 | 0\n      fetch(`${process.env.API_URL}api/rooms`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({id: room_id, name: room_name, occupancy_count: 0})\n      })\n      rooms.push({id: room_id, name: room_name, occupancy_count: 0})\n    }\n\n    if (this.state.settingRoom1) {\n      this.setState({room1: room_id, room1_name: room_name, rooms: rooms})\n    } else {\n      this.setState({room2: room_id, room2_name: room_name, rooms: rooms})\n    }\n  }\n\n  nextRoom = () => {\n    if (this.state.room1 !== null) {\n      this.setState({settingRoom1: false})\n    }\n  }\n\n  saveSensor = async () => {\n    if (this.state.room2) {\n      const room1_id = this.state.room1 === 'external' ? '' : this.state.room1\n      const room2_id = this.state.room2 === 'external' ? '' : this.state.room2\n\n      await fetch(`${process.env.API_URL}api/sensors`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          room_id: `${room1_id}::${room2_id}`,\n          name: `${this.state.room1_name} <-> ${this.state.room2_name}`,\n          type: 'door'\n        })\n      }).then(resp => window.location.href = '/sensors')\n    }\n  }\n\n  formQuestion() {\n    if (this.state.settingRoom1) {\n      return <label htmlFor=\"name\">Which room is this sensor in?</label>\n    }\n\n    return <label htmlFor=\"name\">Now walk through the door. Which room are you in now?</label>\n  }\n\n  renderButton() {\n    if (this.state.settingRoom1) {\n      return <button onClick={this.nextRoom}>Next</button>\n    }\n\n    return <button onClick={this.saveSensor}>Save</button>\n  }\n\n  renderRoomOptions() {\n    const arr = []\n    for (let r of this.state.rooms) {\n      if (this.state.settingRoom1 || r.id !== this.state.room1) {\n        arr.push(<option key={`room${r.id}`} value={r.id} >{r.name}</option>)\n      }\n    }\n    return arr\n  }\n\n  renderExternalOption() {\n    if (this.state.settingRoom1 || this.state.room1 !== 'external') {\n      return <option value=\"external\">Outside</option>\n    }\n  }\n\n  renderRoomForm() {\n    if (this.state.id === null) {\n      return <p>Invalid QR Code...</p>\n    }\n\n    return (\n      <div>\n        { this.formQuestion() }\n\n        <select onChange={this.updateRoom} value={this.state.settingRoom1 ? (this.state.room1 || \"null\") : (this.state.room2 || \"null\")}>\n          <option value=\"null\">Select a room...</option>\n          { this.renderRoomOptions() }\n          { this.renderExternalOption() }\n          <option value=\"new\">Add New Room</option>\n        </select>\n\n        { this.renderButton() }\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Add Sensor\" />\n        <h1 style={{textAlign: `center`}}>Add Sensor</h1>\n        <div style={{margin: `0 auto`, textAlign: `center`}}>\n          { this.renderRoomForm() }\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default AddSensorPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n        <Link style={{margin: `0 20px 0 50px`, fontSize: `0.5em`, color: `#fff`, textDecoration: `none`}} to=\"/\">Rooms</Link>\n        <Link style={{margin: `0 20px`, fontSize: `0.5em`, color: `#fff`, textDecoration: `none`}} to=\"/sensors\">Sensors</Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()} Hiome Inc.\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}