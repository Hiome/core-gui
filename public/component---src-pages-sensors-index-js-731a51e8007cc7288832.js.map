{"version":3,"sources":["webpack:///./src/pages/sensors/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SensorsPage","state","sensors","componentDidMount","_callee","json","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","a","wrap","_context","prev","next","fetch","process","then","resp","sent","this","setState","stop","row","sensor","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","key","id","name","room_id","battery","renderSensors","length","arr","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","done","value","s","push","render","_components_layout__WEBPACK_IMPORTED_MODULE_9__","_components_seo__WEBPACK_IMPORTED_MODULE_10__","title","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","defaultProps","arrayOf","Header","siteTitle","react_default","style","marginBottom","margin","maxWidth","padding","textAlign","gatsby_browser_entry","to","color","textDecoration","Layout","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-sensors-index-js-731a51e8007cc7288832.js","sourcesContent":["import React, { Component } from 'react'\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\n\nclass SensorsPage extends Component {\n  state = {\n    sensors: [],\n  }\n\n  async componentDidMount() {\n    const json = await fetch(`${process.env.API_URL}api/1/sensors`).then(resp => resp.json())\n    this.setState({sensors: json})\n  }\n\n  row(sensor) {\n    return (\n      <li key={sensor.id }>\n        { sensor.name } ({ sensor.id }) is in { sensor.room_id } with { sensor.battery || 'unknown' } volts of battery.\n      </li>\n    )\n  }\n\n  renderSensors() {\n    if (this.state.sensors.length > 0) {\n      const arr = []\n      for (let s of this.state.sensors) {\n        arr.push(this.row(s))\n      }\n      return arr\n    } else {\n      return <p>Uh oh, no sensors found...</p>\n    }\n  }\n\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Sensors\" />\n        <ul>\n          { this.renderSensors() }\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default SensorsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0, textAlign: `center` }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 0px 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}