{"version":3,"sources":["webpack:///./src/components/RoomRow.js","webpack:///./src/pages/index.js"],"names":["RoomRow","_ref","id","occupancy_count","name","_useState","useState","visible","setVisible","react_default","a","createElement","Fragment","gatsby_browser_entry","to","className","title","button_default","icon","shape","ghost","onClick","e","preventDefault","style","marginRight","verticalAlign","color","modal_default","onOk","onCancel","okText","cancelButtonProps","display","textAlign","marginBottom","input_number_default","min","max","autoFocus","value","onChange","v","count","parseInt","isNaN","HomeStream","write","message_default","success","resetCount","size","type","icon_default","propTypes","PropTypes","string","isRequired","number","IndexPage","state","rooms","loading","missingSensors","componentDidMount","_this2","this","fetch","process","then","resp","json","setState","filter","s","room_id","length","subscribe","m","prevState","props","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","next","done","r","object_id","val","bind","addRoomRow","key","renderRooms","spin_default","indicator","margin","arr","sort","b","localeCompare","map","components_RoomRow","push","result_default","role","aria-label","fontSize","subTitle","extra","navigate","render","Layout","Component"],"mappings":"6YAeMA,EAAU,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,GAAIC,EAA4BF,EAA5BE,gBAAiBC,EAAWH,EAAXG,KAAWC,EACnBC,oBAAS,GAAhCC,EAD0CF,EAAA,GACjCG,EADiCH,EAAA,GAGjD,OAAQI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACNH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,mBAAqBZ,EAArB,MACNa,UAAS,SAAUZ,EAAkB,EAAI,SAAW,IACpDa,MAAOZ,GAEPK,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAQQ,KAAK,WAAWC,MAAM,SAASC,OAAK,EAC1CC,QAAS,SAAAC,GAA0C,OAApCA,EAAEC,iBAAiBf,GAAW,IAAa,GAC1DgB,MAAO,CAACC,YAAa,OAAQC,cAAe,SAAUC,MAAOxB,EAAkB,EAAI,OAAS,aAE5FA,EARJ,IAQwBC,GAExBK,EAAAC,EAAAC,cAAAiB,EAAAlB,EAAA,CACEM,MAAOZ,EACPG,QAASA,EACTsB,KAAM,kBAAMrB,GAAW,IACvBsB,SAAU,kBAAMtB,GAAW,IAC3BuB,OAAO,OACPC,kBAAmB,CAACR,MAAM,CAACS,QAAS,UAEpCxB,EAAAC,EAAAC,cAAA,2BAAmBP,EAAnB,6DAAkFK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,mCAAlF,KACAL,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAACU,UAAW,SAAUC,aAAc,SAC9C1B,EAAAC,EAAAC,cAAAyB,EAAA1B,EAAA,CACE2B,IAAK,EACLC,IAAK,GACLC,WAAS,EACTC,MAAOrC,EACPsC,SAAU,SAAAC,GAAC,OArCF,SAACA,EAAGxC,EAAIE,EAAMuC,GAC/BD,EAAIE,SAASF,IACRG,MAAMH,IAAMA,IAAMC,GAASD,GAAK,IACnCI,IAAWC,MAAX,8BAA+C7C,EAA/C,aAA+DwC,GAC/DM,EAAAtC,EAAQuC,QAAR,WAA2B7C,EAA3B,mBAAkDsC,IAiC7BQ,CAAWR,EAAGxC,EAAIE,EAAMD,IACvCgD,KAAK,QACLC,KAAK,YAGT3C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAQL,EAAAC,EAAAC,cAAA0C,EAAA3C,EAAA,CAAM0C,KAAK,SAA5B,qBACH3C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,mBAAqBZ,EAArB,OAA8BO,EAAAC,EAAAC,cAAA0C,EAAA3C,EAAA,CAAM0C,KAAK,YAAjD,IAA+DhD,EAA/D,UACHK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,qBAAuBZ,GAAMO,EAAAC,EAAAC,cAAA0C,EAAA3C,EAAA,CAAM0C,KAAK,YAAhD,IAA8DhD,EAA9D,iBAKTJ,EAAQsD,UAAY,CAClBpD,GAAIqD,IAAUC,OAAOC,WACrBtD,gBAAiBoD,IAAUG,OAAOD,WAClCrD,KAAMmD,IAAUC,OAAOC,YAGVzD,QCpDT2D,8JACJC,MAAQ,CACNC,MAAO,GACPC,SAAS,EACTC,eAAgB,yCAGlBC,kBAAA,WAAoB,IAAAC,EAAAC,KAElBC,MAASC,gBAAkCC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAAQF,KAAK,SAAAC,GAAI,OAAIL,EAAKO,SAAS,CAACX,MAAOS,EAAMR,SAAS,MAGvHK,MAASC,4BACNC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GAAI,OAAIL,EAAKO,SAAS,CAACT,eAAgBO,EAAKG,OAAO,SAAAC,GAAC,OAAkB,OAAdA,EAAEC,UAAkBC,WAGpF9B,IAAW+B,UAAU,6BAA8B,SAASC,GAC1DZ,KAAKM,SAAS,SAACO,EAAWC,GACxB,IAAMnB,EAAQkB,EAAUlB,MACxBoB,EAAcpB,EAAdqB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAqB,KAAAtF,EAAA,GAAAiF,EAAA,IAAAG,GAAAJ,EAAAL,OAAA,MAAA3E,EAAAgF,EAAAI,SAAA,KAAAA,EAAAJ,EAAAO,QAAAC,KAAA,MAAAxF,EAAAoF,EAAA7C,MAAA,IAAZkD,EAAYzF,EACnB,GAAIyF,EAAExF,KAAO4E,EAAEa,UAAW,CACxBD,EAAEvF,gBAAkB2E,EAAEc,IACtB,OAGJ,MAAQ,CAAC/B,YAEXgC,KAAK3B,UAGT4B,WAAA,WACE,OACErF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMkF,IAAI,aAAajF,GAAG,eAAeC,UAAU,cAAcC,MAAM,kBACrEP,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAQQ,KAAK,OAAOC,MAAM,SAASC,OAAK,EACtCI,MAAO,CAACC,YAAa,OAAQC,cAAe,SAAUC,MAAO,UAFjE,QAGUuC,KAAKN,MAAMG,eAHrB,QAGwE,IAA9BG,KAAKN,MAAMG,eAAuB,GAAK,QAKrFiC,YAAA,WACE,GAAI9B,KAAKN,MAAME,QACb,OAAOrD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAAsF,EAAAvF,EAAA,CAAMyC,KAAK,QAAQ+C,UAAWzF,EAAAC,EAAAC,cAAA0C,EAAA3C,EAAA,CAAM0C,KAAK,YAAc5B,MAAO,CAACU,UAAS,SAAYiE,OAAM,SAAYlE,QAAO,YACpH,GAAIiC,KAAKN,MAAMC,MAAMe,OAAS,EAAG,CACtC,IAAMwB,EAAMlC,KAAKN,MAAMC,MAAMwC,KAAK,SAAC3F,EAAE4F,GACnC,OAAI5F,EAAEP,kBAAoBmG,EAAEnG,gBACnBO,EAAEN,KAAKmG,cAAcD,EAAElG,MAE5BM,EAAEP,gBAAkBmG,EAAEnG,gBAAwB,EAC9CO,EAAEP,gBAAkBmG,EAAEnG,iBAAyB,EAC5C,IACNqG,IAAI,SAAAd,GAAC,OAAIjF,EAAAC,EAAAC,cAAC8F,EAAD,CAASV,IAAKL,EAAExF,GAAIA,GAAIwF,EAAExF,GAAIE,KAAMsF,EAAEtF,KAAMD,gBAAiBuF,EAAEvF,oBAG3E,OAFI+D,KAAKN,MAAMG,eAAiB,GAC9BqC,EAAIM,KAAKxC,KAAK4B,cACTM,EAEP,OAAO3F,EAAAC,EAAAC,cAAAgG,EAAAjG,EAAA,CACLQ,KAAMT,EAAAC,EAAAC,cAAA,QAAMiG,KAAK,MAAMC,aAAW,SAASrF,MAAO,CAACsF,SAAQ,QAArD,MACN9F,MAAM,oBACN+F,SAAUtG,EAAAC,EAAAC,cAAA,8FACVqG,MAAOvG,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAQW,QAAS,kBAAM4F,YAAS,iBAAiB7D,KAAK,UAAUD,KAAK,QAAQjC,KAAK,QAAlF,qBAKbgG,OAAA,WACE,OAAOzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAQnG,MAAM,SACjBkD,KAAK8B,mBApEWoB,cAyETzD","file":"component---src-pages-index-js-1602130750408344a9b4.js","sourcesContent":["import { Link } from \"gatsby\"\nimport { Button, Modal, Icon, InputNumber, message } from \"antd\"\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport HomeStream from './homestream'\n\nconst resetCount = (v, id, name, count) => {\n  v = parseInt(v)\n  if (!isNaN(v) && v !== count && v >= 0) {\n    HomeStream.write(`com.hiome/gui/to/com.hiome/${id}/occupancy`, v)\n    message.success(`Updated ${name}'s occupancy to ${v}`)\n  }\n}\n\nconst RoomRow = ({ id, occupancy_count, name }) => {\n  const [visible, setVisible] = useState(false)\n\n  return (<>\n    <Link to={`/hs/1/com.hiome/${id}/~~`}\n      className={`room ${occupancy_count > 0 ? 'active' : ''}`}\n      title={name}\n    >\n      <Button icon=\"ellipsis\" shape=\"circle\" ghost\n        onClick={e => {e.preventDefault();setVisible(true);return false}}\n        style={{marginRight: '10px', verticalAlign: 'middle', color: occupancy_count > 0 ? '#000' : '#a0a0a0'}}\n      />\n      { occupancy_count } { name }\n    </Link>\n    <Modal\n      title={name}\n      visible={visible}\n      onOk={() => setVisible(false)}\n      onCancel={() => setVisible(false)}\n      okText=\"Done\"\n      cancelButtonProps={{style:{display: 'none'}}}\n    >\n      <p>You can change {name}'s occupancy count, but in order to help me learn, please <Link to=\"/door\">tell me which entry I got wrong</Link>!</p>\n      <div style={{textAlign: 'center', marginBottom: '30px'}}>\n        <InputNumber\n          min={0}\n          max={99}\n          autoFocus\n          value={occupancy_count}\n          onChange={v => resetCount(v, id, name, occupancy_count)}\n          size=\"large\"\n          type=\"number\"\n        />\n      </div>\n      <p><Link to=\"/door\"><Icon type=\"like\" /> Calibrate Hiome</Link></p>\n      <p><Link to={`/hs/1/com.hiome/${id}/~~`}><Icon type=\"history\" /> {name} Logs</Link></p>\n      <p><Link to={`/settings/room?id=${id}`}><Icon type=\"setting\" /> {name} Settings</Link></p>\n    </Modal>\n  </>)\n}\n\nRoomRow.propTypes = {\n  id: PropTypes.string.isRequired,\n  occupancy_count: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired\n}\n\nexport default RoomRow\n","import { Link, navigate } from \"gatsby\"\nimport React, { Component } from 'react'\nimport { Result, Button, Icon, Spin } from 'antd'\n\nimport Layout from \"../components/Layout\"\nimport HomeStream from '../components/homestream'\nimport RoomRow from '../components/RoomRow'\n\nimport \"./rooms.css\"\n\nclass IndexPage extends Component {\n  state = {\n    rooms: [],\n    loading: true,\n    missingSensors: 0\n  }\n\n  componentDidMount() {\n    // load all rooms\n    fetch(`${process.env.API_URL}api/1/rooms`).then(resp => resp.json()).then(resp => this.setState({rooms: resp, loading: false}))\n\n    // figure out how many sensors haven't been configured yet\n    fetch(`${process.env.API_URL}api/1/sensors?type=door`)\n      .then(resp => resp.json())\n      .then(resp => this.setState({missingSensors: resp.filter(s => s.room_id === null).length}))\n\n    // subscribe to live updates\n    HomeStream.subscribe('hs/1/com.hiome/+/occupancy', function(m) {\n      this.setState((prevState, props) => {\n        const rooms = prevState.rooms\n        for (let r of rooms) {\n          if (r.id === m.object_id) {\n            r.occupancy_count = m.val\n            break\n          }\n        }\n        return ({rooms})\n      })\n    }.bind(this))\n  }\n\n  addRoomRow() {\n    return (\n      <Link key='add_sensor' to='/sensors/add' className='room active' title='Add New Sensor'>\n        <Button icon=\"plus\" shape=\"circle\" ghost\n          style={{marginRight: '10px', verticalAlign: 'middle', color: '#000'}}\n        /> Add {this.state.missingSensors} Door{this.state.missingSensors === 1 ? '' : 's'}\n      </Link>\n    )\n  }\n\n  renderRooms() {\n    if (this.state.loading) {\n      return <div><Spin size=\"large\" indicator={<Icon type=\"loading\" />} style={{textAlign: `center`, margin: `10em 0`, display: `block`}} /></div>\n    } else if (this.state.rooms.length > 0) {\n      const arr = this.state.rooms.sort((a,b) => {\n        if (a.occupancy_count === b.occupancy_count) {\n          return a.name.localeCompare(b.name)\n        }\n        if (a.occupancy_count < b.occupancy_count) return 1\n        if (a.occupancy_count > b.occupancy_count) return -1\n        return 0\n      }).map(r => <RoomRow key={r.id} id={r.id} name={r.name} occupancy_count={r.occupancy_count} />)\n      if (this.state.missingSensors > 0)\n        arr.push(this.addRoomRow())\n      return arr\n    } else {\n      return <Result\n        icon={<span role=\"img\" aria-label=\"hurray\" style={{fontSize: `5em`}}>ðŸŽ‰</span>}\n        title=\"Welcome to Hiome!\"\n        subTitle={<p>This will be your dashboard, but it's a little empty right now. Let's add a door.</p>}\n        extra={<Button onClick={() => navigate('/sensors/add')} type=\"primary\" size=\"large\" icon=\"plus\">Add New Door</Button>}\n      />\n    }\n  }\n\n  render() {\n    return <Layout title=\"Rooms\">\n      { this.renderRooms() }\n    </Layout>\n  }\n}\n\nexport default IndexPage\n"],"sourceRoot":""}