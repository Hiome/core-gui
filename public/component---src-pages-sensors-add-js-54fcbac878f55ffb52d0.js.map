{"version":3,"sources":["webpack:///./src/pages/sensors/add.js"],"names":["Step","AddSensorPage","state","id","name","room1","room1_name","room1_hidden","event1","room2","room2_name","room2_hidden","event2","rooms","sensors","loading","loadingButton","step","secondsToCalibration","timeSinceBoot","Date","getTime","waitingForSensorData","multipleSensorsFound","unknownError","onchange","roomId","checked","_this","setState","fetch","process","method","headers","Accept","Content-Type","body","JSON","stringify","hidden","occupancy_count","then","resp","addRoom","room_name","prompt","trim","map","r","indexOf","antd_lib_message__WEBPACK_IMPORTED_MODULE_17___default","a","error","room_id","now","selectRoom","roomName","roomHidden","updateCountdown","calibrationTimeRemaining","clearInterval","timer","componentDidMount","_this2","this","json","HomeStream","subscribe","m","data","is_valid","some","x","object_id","val","saveSensor","bind","ts","finalRoomId","finalSensorName","_this3","room1Id","room2Id","type","renderHiddenQ","otherRoomName","_this4","room_sensors","s","sId","split","find","filter","sensor_list","length","join","react__WEBPACK_IMPORTED_MODULE_23___default","createElement","style","whiteSpace","antd_lib_switch__WEBPACK_IMPORTED_MODULE_13___default","key","onChange","e","checkedChildren","unCheckedChildren","renderHiddenDescription","antd_lib_icon__WEBPACK_IMPORTED_MODULE_11___default","theme","twoToneColor","renderFinished","antd_lib_result__WEBPACK_IMPORTED_MODULE_7___default","status","title","subTitle","extra","antd_lib_button__WEBPACK_IMPORTED_MODULE_9___default","onClick","window","location","reload","navigate","marginBottom","render5ftwarning","antd_lib_alert__WEBPACK_IMPORTED_MODULE_5___default","margin","message","renderRoomList","_this5","dataSource","push","antd_lib_list__WEBPACK_IMPORTED_MODULE_1___default","rowKey","item","renderItem","room","Item","antd_lib_card__WEBPACK_IMPORTED_MODULE_3___default","textAlign","minWidth","hoverable","textOverflow","overflow","grid","gutter","xs","sm","md","lg","xl","xxl","renderRooms","Fragment","height","block","icon","renderOpenDoor","width","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","d","cx","cy","Math","floor","renderWalkThroughDoor","timeRemaining","setInterval","component","renderMultipleSensorsError","openHelpModal","renderUnknownError","dispatchEvent","Event","renderStep","render","_components_Layout__WEBPACK_IMPORTED_MODULE_24__","antd_lib_steps__WEBPACK_IMPORTED_MODULE_21___default","size","labelPlacement","current","Component"],"mappings":"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","file":"component---src-pages-sensors-add-js-54fcbac878f55ffb52d0.js","sourcesContent":["import { navigate } from \"gatsby\"\nimport React, { Component } from 'react'\nimport { Button, Icon, Card, List, Steps, Alert, Result, Switch, message } from \"antd\"\n\nimport Layout from \"../../components/Layout\"\nimport HomeStream from \"../../components/homestream\"\n\nconst { Step } = Steps\n\nclass AddSensorPage extends Component {\n  state = {\n    id: null,\n    name: '',\n    room1: null,\n    room1_name: null,\n    room1_hidden: false,\n    event1: null,\n    room2: null,\n    room2_name: null,\n    room2_hidden: false,\n    event2: null,\n    rooms: [],\n    sensors: [],\n    loading: true,\n    loadingButton: false,\n    step: 0,\n    secondsToCalibration: null,\n    timeSinceBoot: new Date().getTime() - 30000,\n    waitingForSensorData: false,\n    multipleSensorsFound: false,\n    unknownError: false\n  }\n\n  componentDidMount() {\n    this.setState({loading: true})\n    fetch(`${process.env.API_URL}api/1/rooms?include_hidden=true`)\n      .then(resp => resp.json())\n      .then(resp => this.setState({rooms: resp, loading: false}))\n\n    fetch(`${process.env.API_URL}api/1/sensors?type=door`)\n      .then(resp => resp.json())\n      .then(resp => this.setState({sensors: resp}))\n\n    HomeStream.subscribe('hs/1/com.hiome/+/entry', function(m) {\n      // we can't already be in a crisis\n      if (this.state.multipleSensorsFound || !this.state.waitingForSensorData) return\n      // ignore any invalid event\n      if (!m.data.is_valid) return\n      // sensor must not have room_id defined already\n      if (!this.state.sensors.some(x => x.id === m.object_id && x.room_id === null)) return\n\n      if (this.state.id === null || this.state.id === m.object_id) {\n        // this is our sensor\n        if (this.state.event1 === null) {\n          this.setState({id: m.object_id, event1: m.val, waitingForSensorData: false, step: 1})\n        } else {\n          this.setState({id: m.object_id, event2: m.val, waitingForSensorData: false, step: 2}, this.saveSensor)\n        }\n      } else {\n        // uh oh, there's another unknown sensor shooting off events at the same time. We can only handle one at a time\n        this.setState({multipleSensorsFound: true})\n      }\n    }.bind(this))\n    HomeStream.subscribe('hs/1/com.hiome/+/version', function(m) {\n      // if we just saw a version message, that means the sensor just booted\n      if (this.state.timeSinceBoot < m.ts) this.setState({timeSinceBoot: m.ts})\n    }.bind(this))\n  }\n\n  onchange = (roomId, checked) => {\n    this.setState({loadingButton: true})\n    fetch(`${process.env.API_URL}api/1/rooms/${roomId}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({hidden: checked, occupancy_count: 0})\n    }).then(resp =>\n      roomId === this.state.room1 ? this.setState({room1_hidden: checked, loadingButton: false}) : this.setState({room2_hidden: checked, loadingButton: false}))\n  }\n\n  saveSensor() {\n    let finalRoomId, finalSensorName\n    const room1Id = this.state.room1 === 'external' ? '' : this.state.room1\n    const room2Id = this.state.room2 === 'external' ? '' : this.state.room2\n    if (this.state.event1 === 1 && this.state.event2 === 2) {\n      // 2 -> 1\n      finalRoomId = `${room2Id}::${room1Id}`\n      finalSensorName = `${this.state.room2_name} to ${this.state.room1_name} Door`\n    } else if (this.state.event1 === 2 && this.state.event2 === 1) {\n      // 1 -> 2\n      finalRoomId = `${room1Id}::${room2Id}`\n      finalSensorName = `${this.state.room1_name} to ${this.state.room2_name} Door`\n    } else {\n      // something went wrong\n      this.setState({unknownError: true})\n      return\n    }\n\n    this.setState({name: finalSensorName, loading: true})\n    fetch(`${process.env.API_URL}api/1/sensors`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.id,\n        room_id: finalRoomId,\n        name: finalSensorName,\n        type: 'door'\n      })\n    }).then(resp => this.setState({loading: false}))\n\n    return finalSensorName;\n  }\n\n  renderHiddenQ(roomId, roomName, roomHidden, otherRoomName) {\n    if (roomId === 'external') return\n\n    const room_sensors = this.state.sensors.map(s => {\n      if (s.room_id) {\n        const sId = s.room_id.split(\"::\")\n        if (sId[0] === roomId) return this.state.rooms.find(r => r.id === sId[1])\n        if (sId[1] === roomId) return this.state.rooms.find(r => r.id === sId[0])\n      }\n      return null\n    }).filter(x => x).map(x => x.name)\n    const sensor_list = room_sensors.length === 0 ? `a door to` :\n      `${room_sensors.length + 1} doors to ${room_sensors.join(', ')}${room_sensors.length > 1 ? ',' : ''} and`\n\n    return (<p style={{whiteSpace: `pre-wrap`}}>\n      <strong>{roomName}</strong> now has {sensor_list} {otherRoomName}. Are there any other doors in {roomName}? {`  `}\n        <Switch\n            key={`hideRoom${roomId}`}\n            onChange={(checked, e) => this.onchange(roomId, checked)}\n            checked={roomHidden}\n            loading={this.state.loadingButton}\n            checkedChildren=\"Yes\"\n            unCheckedChildren=\"No\" />\n    </p>)\n  }\n\n  renderHiddenDescription(roomId, roomHidden) {\n    if (roomId === 'external') return\n    if (roomHidden) {\n      return <p>\n        <Icon type=\"exclamation-circle\" theme=\"twoTone\" twoToneColor=\"#f8ac30\" /> No problem, I'll hide this room for now until all its doors have Hiome Door sensors.\n      </p>\n    } else {\n      return <p>\n        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> Awesome, you're all set!\n      </p>\n    }\n  }\n\n  renderFinished() {\n    return (\n      <Result status=\"success\" title={`${this.state.name} is ready!`} subTitle=\"Enjoy your smarter door.\"\n      extra={[\n        <Button key=\"add_another\" onClick={() => window.location.reload()} loading={this.state.loading}>Add Another Door</Button>,\n        <Button key=\"all_done\" type=\"primary\" onClick={() => navigate(\"/\")} loading={this.state.loading}>Done</Button>\n      ]}>\n        <div style={this.state.room1 === 'external' || this.state.room2 === 'external' ? {} : {marginBottom: `50px`}}>\n          { this.renderHiddenQ(this.state.room1, this.state.room1_name, this.state.room1_hidden, this.state.room2_name) }\n          { this.renderHiddenDescription(this.state.room1, this.state.room1_hidden) }\n        </div>\n\n        <div>\n          { this.renderHiddenQ(this.state.room2, this.state.room2_name, this.state.room2_hidden, this.state.room1_name) }\n          { this.renderHiddenDescription(this.state.room2, this.state.room2_hidden) }\n        </div>\n      </Result>\n    )\n  }\n\n  addRoom = () => {\n    let room_name = prompt(\"What is the name of this room?\", \"Living Room\")\n    if (!room_name || !room_name.trim()) return // no name given\n    room_name = room_name.trim()\n\n    // ignore if this room already exists\n    if (this.state.rooms.map(r => r.name).indexOf(room_name) >= 0) {\n      message.error(`${room_name} already exists!`)\n      return\n    }\n\n    const room_id = \"room_\" + (Date.now() / 1000 | 0)\n    this.setState({loadingButton: true})\n    fetch(`${process.env.API_URL}api/1/rooms`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({id: room_id, name: room_name, occupancy_count: (this.state.step === 0 ? 1 : 0), hidden: false})\n    }).then(resp => this.selectRoom(room_id, room_name, false))\n  }\n\n  selectRoom = (roomId, roomName, roomHidden) => {\n    if (this.state.step === 0) {\n      this.setState({room1: roomId, room1_name: roomName, room1_hidden: roomHidden, waitingForSensorData: true, loadingButton: false})\n    } else {\n      this.setState({room2: roomId, room2_name: roomName, room2_hidden: roomHidden, waitingForSensorData: true, loadingButton: false})\n    }\n  }\n\n  render5ftwarning() {\n    if (this.state.step === 0)\n      return <Alert type=\"warning\" style={{margin: `20px auto`}}\n          message=\"Make sure the Hiome Door sensor is powered on and you are standing at least 5 feet away from the door.\" />\n    else return <br/>\n  }\n\n  renderRoomList() {\n    let dataSource = this.state.rooms\n    if (this.state.step > 0) {\n      dataSource = dataSource.filter(r => r.id !== this.state.room1)\n      dataSource.push({id:'external', name: \"I'm Outside My Home\"})\n    }\n    if (dataSource.length === 0) return <br/>\n    return <List\n      dataSource={dataSource}\n      rowKey={item => `room${item.id}`}\n      renderItem={room => <List.Item>\n          <Card style={{textAlign: `center`, minWidth: `200px`}} hoverable={true} onClick={() => this.selectRoom(room.id, room.name, room.hidden)}>\n            <div style={{\n              textOverflow: `ellipsis`, overflow: `hidden`, whiteSpace: `nowrap`\n            }}>\n              {room.name}\n            </div>\n          </Card>\n        </List.Item>\n      }\n      loading={this.state.loading}\n      grid={{\n        gutter: 25,\n        xs: 1,\n        sm: 2,\n        md: 2,\n        lg: 3,\n        xl: 4,\n        xxl: 5,\n      }} />\n  }\n\n  renderRooms() {\n    return <>\n      { this.render5ftwarning() }\n\n      <p><strong>Which room are you standing in{this.state.step === 1 ? ' now' : ''}?</strong></p>\n\n      { this.renderRoomList() }\n\n      <Button style={{height: `50px`}} type=\"primary\" block icon=\"plus\"\n        loading={this.state.loadingButton} onClick={this.addRoom}>Add New Room</Button>\n    </>\n  }\n\n  renderOpenDoor() {\n    return <svg width=\"80px\" height=\"128px\" viewBox=\"0 0 47 76\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g fillRule=\"nonzero\">\n          <path d=\"M25.3,17.1 C25.3,14.8 25.4,9.2 25.4,7.1 C32.3,4.9 39.3,2.6 46.2,0.4 C46.3,22.7 46.2,53.2 46.3,75.4 L30.6,75.4 C31.1,74.5 31.4,73.5 31.4,72.4 L31.4,66.5 C31.4,64 31,61.5 30.3,59.1 L28.6,53.3 L28.3,47.4 C28.3,46.7 28.2,46 28.2,45.3 C29.9,46.3 31.7,47.2 33.5,47.9 C34.2,48.2 34.9,48.3 35.6,48.3 C36.8,48.3 37.9,48 38.8,47.3 C39.8,46.6 40.5,45.7 41,44.6 C42.2,41.6 40.7,38.3 37.7,37.1 C35.7,36.3 33.7,35.2 31.9,34 C30.3,32.8 28.8,31.4 27.5,29.9 C26.9,29.2 26.1,28.6 25.2,28.2 L25.2,27.9 C26.4,26.4 27.1,24.5 27.1,22.5 C27.1,20.5 26.6,18.6 25.3,17.1 Z\" fill=\"#6F3CD1\"></path>\n          <path d=\"M25.5,39.8 C25.4,42.3 25.4,44.9 25.5,47.4 L25.8,53.7 L27.6,59.9 C28.2,62 28.6,64.2 28.6,66.5 L28.6,72.4 C28.6,74 27.3,75.3 25.7,75.3 L25.4,75.3 L25.4,31.4 C25.5,31.5 25.5,31.5 25.6,31.6 C27,33.3 28.7,34.8 30.5,36.1 C32.5,37.5 34.6,38.7 36.9,39.6 C38.4,40.2 39.2,41.9 38.6,43.4 C38.2,44.6 37,45.3 35.9,45.3 C35.5,45.3 35.2,45.2 34.8,45.1 C32,44 29.4,42.6 27.1,40.9 C26.5,40.6 26,40.2 25.5,39.8 Z\" fill=\"#000000\"></path>\n          <path d=\"M36.8,39.7 C34.5,38.8 32.4,37.6 30.4,36.2 C28.6,34.9 27,33.4 25.5,31.7 C24.9,31 24.1,30.7 23.2,30.7 L21.5,30.7 L21.2,30.7 L15.7,30.7 C14.9,30.6 14.2,30.6 13.4,30.7 C8.3,31.3 5.3,35.7 3.7,38 C2,40.4 0.8,43.1 0.1,46 C-0.3,47.6 0.7,49.2 2.2,49.6 C2.4,49.7 2.7,49.7 2.9,49.7 C4.2,49.7 5.4,48.8 5.7,47.5 C6.3,45.3 7.2,43.2 8.4,41.4 C9.2,40.2 10.4,38.5 11.8,37.5 C12.1,42.4 12.1,47.3 11.7,52.1 L11.6,53.8 L10.6,57.8 C9.9,60.4 8.5,62.8 6.5,64.5 L3.3,67.3 C2.1,68.4 2,70.2 3,71.4 C4.1,72.6 5.9,72.7 7.1,71.7 L10.3,68.9 C13.2,66.3 15.3,63 16.3,59.2 L16.8,57.2 L20.7,57.2 L22,61.6 C22.5,63.2 22.7,64.8 22.7,66.5 L22.7,72.4 C22.7,74 24,75.3 25.6,75.3 C27.2,75.3 28.5,74 28.5,72.4 L28.5,66.5 C28.5,64.3 28.2,62.1 27.5,59.9 L25.7,53.7 L25.4,47.5 C25.3,45 25.3,42.4 25.4,39.8 C25.9,40.2 26.3,40.5 26.8,40.9 C29.2,42.6 31.8,44.1 34.5,45.1 C34.8,45.2 35.2,45.3 35.6,45.3 C36.8,45.3 37.9,44.6 38.3,43.4 C39.1,42 38.3,40.3 36.8,39.7 Z\" fill=\"#000000\"></path>\n          <circle fill=\"#000000\" cx=\"18.5\" cy=\"22.5\" r=\"5.9\"></circle>\n        </g>\n      </g>\n    </svg>\n  }\n\n  calibrationTimeRemaining() {\n    return 20 - Math.floor((new Date().getTime() - this.state.timeSinceBoot)/1000)\n  }\n\n  updateCountdown = () => {\n    const secondsToCalibration = this.calibrationTimeRemaining()\n    if (secondsToCalibration < 1) clearInterval(this.timer)\n    this.setState({secondsToCalibration})\n  }\n\n  renderWalkThroughDoor() {\n    const timeRemaining = this.calibrationTimeRemaining()\n    if (this.state.step === 0 && timeRemaining > 0) {\n      if (!this.timer) this.timer = setInterval(this.updateCountdown, 1000)\n      return <Result icon={<Icon type=\"loading\" />} title=\"Calibrating Hiome Door\"\n        subTitle={<>\n          <p>Almost ready... just {this.state.secondsToCalibration || timeRemaining} more seconds!</p>\n          <Alert type=\"warning\" message=\"Make sure you're standing at least 5 feet away from the door during calibration.\" />\n        </>} />\n    } else {\n      return <Result icon={<Icon component={this.renderOpenDoor} />}\n        title={`Walk ${this.state.step === 1 ? 'back ' : ''}through the door${this.state.step === 1 ? ' again' : ''}.`}\n        subTitle={<><Icon type=\"loading\" /> &nbsp; Waiting...</>} />\n    }\n  }\n\n  renderMultipleSensorsError() {\n    return <Result status=\"warning\" title=\"Multiple Possible Sensors Detected\"\n      subTitle=\"It looks like multiple doors are being used right now.\"\n      extra={[\n        <Button key=\"contact\" onClick={this.openHelpModal}>Contact Support</Button>,\n        <Button key=\"try_again\" type=\"primary\" onClick={() => window.location.reload()}>Try Again</Button>\n      ]}>\n        <div><Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> Make sure other people aren't walking around at the same time.</div>\n        <br/>\n        <div><Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> Try unplugging other Hiome Door sensors that haven't been configured yet.</div>\n      </Result>\n  }\n\n  renderUnknownError() {\n    return <Result status=\"warning\" title=\"Something Went Wrong\"\n      subTitle=\"The entry and exit did not match up. Make sure you only walk through the door when instructed.\"\n      extra={[\n        <Button key=\"contact\" onClick={this.openHelpModal}>Contact Support</Button>,\n        <Button key=\"try_again\" type=\"primary\" onClick={() => window.location.reload()}>Try Again</Button>\n      ]} />\n  }\n\n  openHelpModal() {\n    window.dispatchEvent(new Event(\"helpMe\"))\n  }\n\n  renderStep() {\n    if (this.state.multipleSensorsFound) {\n      return this.renderMultipleSensorsError()\n    } else if (this.state.unknownError) {\n      return this.renderUnknownError()\n    } else if (this.state.step === 0) {\n      return this.state.room1 ? this.renderWalkThroughDoor() : this.renderRooms()\n    } else if (this.state.step === 1) {\n      return this.state.room2 ? this.renderWalkThroughDoor() : this.renderRooms()\n    } else {\n      return this.renderFinished()\n    }\n  }\n\n  render() {\n    return (\n      <Layout title=\"Add Sensor\">\n        <Steps size=\"small\" labelPlacement=\"vertical\" current={this.state.step}>\n          <Step title={this.state.room1_name || 'Current Room'} />\n          <Step title={this.state.room2_name || 'Adjoining Room'} />\n          <Step title=\"Finish\" />\n        </Steps>\n\n        { this.renderStep() }\n      </Layout>\n    )\n  }\n}\n\nexport default AddSensorPage\n"],"sourceRoot":""}