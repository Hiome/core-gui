{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/swr/esm/libs/hash.js","webpack:///./node_modules/swr/esm/cache.js","webpack:///./node_modules/swr/esm/config.js","webpack:///./node_modules/swr/esm/use-swr.js","webpack:///./node_modules/swr/esm/libs/throttle.js","webpack:///./node_modules/swr/esm/index.js","webpack:///./node_modules/swr/esm/swr-config-context.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/swr/esm/libs/is-document-visible.js","webpack:///./node_modules/swr/esm/libs/is-online.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/fast-deep-equal/index.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["module","exports","require","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined","global","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","object","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod","Function","table","WeakMap","counter","Cache","initialData","__cache","Map","entries","__listeners","get","_key","serializeKey","set","shouldNotify","mutate","notify","Array","from","has","clear","delete","isArray","_hash","String","hash","subscribe","listener","_this","isSubscribed","index","indexOf","_iterator","_isArray","_i","_ref","__webpack_require__","d","__webpack_exports__","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","MUTATION_END_TS","cache","slowConnection","window","navigator","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","onErrorRetry","_","__","config","revalidate","opts","isDocumentVisible","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","deepEqual","eventsBinded","addEventListener","isOnline","IS_SERVER","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","trigger","shouldRevalidate","_cache$serializeKey","keyErr","updaters","currentData","currentError","broadcastState","data","asyncToGenerator_default","regenerator_default","a","_callee","_data","_cache$serializeKey2","beforeMutationTs","beforeConcurrentPromisesTs","_context","Date","now","t0","t1","_x","_x2","_x3","SWRConfigContext","Provider","useSWR","_cache$serializeKey3","fnArgs","assign","useContext","fetcher","initialError","stateDependencies","useRef","isValidating","stateRef","rerender","useState","dispatch","useCallback","payload","shouldUpdateState","k","current","unmountedRef","keyRef","eventsRef","emit","event","_config","_len","params","_key2","boundMutate","_ref2","_callee2","revalidateOpts","loading","shouldDeduping","newData","startAt","newState","_context2","dedupe","_x4","currentHookData","latestKeyedData","onFocus","interval","pending","softRevalidate","revalidateOnMount","onUpdate","updatedData","updatedError","needUpdate","reconnect","revalidators","removeEventListener","_ref3","timer","tick","_callee3","_context3","clearTimeout","latestData","latestError","useMemo","defineProperties","use_swr","react__WEBPACK_IMPORTED_MODULE_0__","createContext","getKeys","toIObject","isEnum","f","isEntries","it","O","document","visibilityState","onLine","g","hadRuntime","getOwnPropertyNames","oldRuntime","e","keyList","hasProp","equal","b","arrA","arrB","dateA","dateB","getTime","regexpA","RegExp","regexpB","$export","$entries","S"],"mappings":"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","file":"4-0a7a20ea697bdb8338e1.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    let key = 'arg';\n    for (let i = 0; i < args.length; ++i) {\n        let _hash;\n        if (args[i] === null || typeof args[i] !== 'object') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // null        -> 'null'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","import { mutate } from './use-swr';\nimport hash from './libs/hash';\nexport default class Cache {\n    constructor(initialData = {}) {\n        this.__cache = new Map(Object.entries(initialData));\n        this.__listeners = [];\n    }\n    get(key) {\n        const [_key] = this.serializeKey(key);\n        return this.__cache.get(_key);\n    }\n    set(key, value, shouldNotify = true) {\n        const [_key] = this.serializeKey(key);\n        this.__cache.set(_key, value);\n        if (shouldNotify)\n            mutate(key, value, false);\n        this.notify();\n    }\n    keys() {\n        return Array.from(this.__cache.keys());\n    }\n    has(key) {\n        const [_key] = this.serializeKey(key);\n        return this.__cache.has(_key);\n    }\n    clear(shouldNotify = true) {\n        if (shouldNotify)\n            this.__cache.forEach(key => mutate(key, null, false));\n        this.__cache.clear();\n        this.notify();\n    }\n    delete(key, shouldNotify = true) {\n        const [_key] = this.serializeKey(key);\n        if (shouldNotify)\n            mutate(key, null, false);\n        this.__cache.delete(_key);\n        this.notify();\n    }\n    // TODO: introduce namespace for the cache\n    serializeKey(key) {\n        let args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        const errorKey = key ? 'err@' + key : '';\n        return [key, args, errorKey];\n    }\n    subscribe(listener) {\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        let isSubscribed = true;\n        this.__listeners.push(listener);\n        return () => {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            const index = this.__listeners.indexOf(listener);\n            if (index > -1) {\n                this.__listeners[index] = this.__listeners[this.__listeners.length - 1];\n                this.__listeners.length--;\n            }\n        };\n    }\n    // Notify Cache subscribers about a change in the cache\n    notify() {\n        for (let listener of this.__listeners) {\n            listener();\n        }\n    }\n}\n","import deepEqual from 'fast-deep-equal';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport Cache from './cache';\n// cache\nconst cache = new Cache();\n// state managers\nconst CONCURRENT_PROMISES = {};\nconst CONCURRENT_PROMISES_TS = {};\nconst FOCUS_REVALIDATORS = {};\nconst CACHE_REVALIDATORS = {};\nconst MUTATION_TS = {};\nconst MUTATION_END_TS = {};\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (config.errorRetryCount && opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    const count = Math.min(opts.retryCount || 0, 8);\n    const timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nconst slowConnection = typeof window !== 'undefined' &&\n    navigator['connection'] &&\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nconst defaultConfig = {\n    // events\n    onLoadingSlow: () => { },\n    onSuccess: () => { },\n    onError: () => { },\n    onErrorRetry,\n    errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n    refreshInterval: 0,\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    shouldRetryOnError: true,\n    suspense: false,\n    compare: deepEqual\n};\n// Focus revalidate\nlet eventsBinded = false;\nif (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {\n    const revalidate = () => {\n        if (!isDocumentVisible() || !isOnline())\n            return;\n        for (let key in FOCUS_REVALIDATORS) {\n            if (FOCUS_REVALIDATORS[key][0])\n                FOCUS_REVALIDATORS[key][0]();\n        }\n    };\n    window.addEventListener('visibilitychange', revalidate, false);\n    window.addEventListener('focus', revalidate, false);\n    // only bind the events once\n    eventsBinded = true;\n}\nexport { CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, CACHE_REVALIDATORS, MUTATION_TS, MUTATION_END_TS, cache };\nexport default defaultConfig;\n","import { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport defaultConfig, { CACHE_REVALIDATORS, CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, MUTATION_TS, MUTATION_END_TS, cache } from './config';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport throttle from './libs/throttle';\nimport SWRConfigContext from './swr-config-context';\nconst IS_SERVER = typeof window === 'undefined';\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\nconst trigger = (_key, shouldRevalidate = true) => {\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    const [key, , keyErr] = cache.serializeKey(_key);\n    if (!key)\n        return;\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        const currentData = cache.get(key);\n        const currentError = cache.get(keyErr);\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](shouldRevalidate, currentData, currentError, i > 0);\n        }\n    }\n};\nconst broadcastState = (key, data, error) => {\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error);\n        }\n    }\n};\nconst mutate = async (_key, _data, shouldRevalidate = true) => {\n    const [key] = cache.serializeKey(_key);\n    if (!key)\n        return;\n    // if there is no new data, call revalidate against the key\n    if (typeof _data === 'undefined')\n        return trigger(_key, shouldRevalidate);\n    // update timestamps\n    MUTATION_TS[key] = Date.now() - 1;\n    MUTATION_END_TS[key] = 0;\n    // keep track of timestamps before await asynchronously\n    const beforeMutationTs = MUTATION_TS[key];\n    const beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n    let data, error;\n    if (_data && typeof _data === 'function') {\n        // `_data` is a function, call it passing current cache value\n        try {\n            data = await _data(cache.get(key));\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else if (_data && typeof _data.then === 'function') {\n        // `_data` is a promise\n        try {\n            data = await _data;\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else {\n        data = _data;\n    }\n    // check if other mutations have occurred since we've started awaiting, if so then do not persist this change\n    if (beforeMutationTs !== MUTATION_TS[key] ||\n        beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n        if (error)\n            throw error;\n        return data;\n    }\n    if (typeof data !== 'undefined') {\n        // update cached data, avoid notifying from the cache\n        cache.set(key, data, false);\n    }\n    // reset the timestamp to mark the mutation has ended\n    MUTATION_END_TS[key] = Date.now() - 1;\n    // enter the revalidation stage\n    // update existing SWR Hooks' state\n    const updaters = CACHE_REVALIDATORS[key];\n    if (updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](!!shouldRevalidate, data, error, i > 0);\n        }\n    }\n    // throw error or return data to be used by caller of mutate\n    if (error)\n        throw error;\n    return data;\n};\nfunction useSWR(...args) {\n    let _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    const [key, fnArgs, keyErr] = cache.serializeKey(_key);\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    if (typeof fn === 'undefined') {\n        // use the global fetcher\n        fn = config.fetcher;\n    }\n    const initialData = cache.get(key) || config.initialData;\n    const initialError = cache.get(keyErr);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    const stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    const stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: false\n    });\n    const rerender = useState(null)[1];\n    let dispatch = useCallback(payload => {\n        let shouldUpdateState = false;\n        for (let k in payload) {\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            rerender({});\n        }\n    }, []);\n    // error ref inside revalidate (is last request errored?)\n    const unmountedRef = useRef(false);\n    const keyRef = useRef(key);\n    // do unmount check for callbacks\n    const eventsRef = useRef({\n        emit: (event, ...params) => {\n            if (unmountedRef.current)\n                return;\n            config[event](...params);\n        }\n    });\n    const boundMutate = useCallback((data, shouldRevalidate) => {\n        return mutate(key, data, shouldRevalidate);\n    }, [key]);\n    // start a revalidation\n    const revalidate = useCallback(async (revalidateOpts = {}) => {\n        if (!key || !fn)\n            return false;\n        if (unmountedRef.current)\n            return false;\n        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n        let loading = true;\n        let shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n        // start fetching\n        try {\n            dispatch({\n                isValidating: true\n            });\n            let newData;\n            let startAt;\n            if (shouldDeduping) {\n                // there's already an ongoing request,\n                // this one needs to be deduplicated.\n                startAt = CONCURRENT_PROMISES_TS[key];\n                newData = await CONCURRENT_PROMISES[key];\n            }\n            else {\n                // if no cache being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && !cache.get(key)) {\n                    setTimeout(() => {\n                        if (loading)\n                            eventsRef.current.emit('onLoadingSlow', key, config);\n                    }, config.loadingTimeout);\n                }\n                if (fnArgs !== null) {\n                    CONCURRENT_PROMISES[key] = fn(...fnArgs);\n                }\n                else {\n                    CONCURRENT_PROMISES[key] = fn(key);\n                }\n                CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n                newData = await CONCURRENT_PROMISES[key];\n                setTimeout(() => {\n                    delete CONCURRENT_PROMISES[key];\n                    delete CONCURRENT_PROMISES_TS[key];\n                }, config.dedupingInterval);\n                // trigger the success event,\n                // only do this for the original request.\n                eventsRef.current.emit('onSuccess', newData, key, config);\n            }\n            const shouldIgnoreRequest = \n            // if there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            CONCURRENT_PROMISES_TS[key] > startAt ||\n                // if there're other mutations(s), overlapped with the current revalidation:\n                // case 1:\n                //   req------------------>res\n                //       mutate------>end\n                // case 2:\n                //         req------------>res\n                //   mutate------>end\n                // case 3:\n                //   req------------------>res\n                //       mutate-------...---------->\n                // we have to ignore the revalidation result (res) because it's no longer fresh.\n                // meanwhile, a new revalidation should be triggered when the mutation ends.\n                (MUTATION_TS[key] &&\n                    // case 1\n                    (startAt <= MUTATION_TS[key] ||\n                        // case 2\n                        startAt <= MUTATION_END_TS[key] ||\n                        // case 3\n                        MUTATION_END_TS[key] === 0));\n            if (shouldIgnoreRequest) {\n                dispatch({ isValidating: false });\n                return false;\n            }\n            cache.set(key, newData, false);\n            cache.set(keyErr, undefined, false);\n            // new state for the reducer\n            const newState = {\n                isValidating: false\n            };\n            if (typeof stateRef.current.error !== 'undefined') {\n                // we don't have an error\n                newState.error = undefined;\n            }\n            if (!config.compare(stateRef.current.data, newData)) {\n                // deep compare to avoid extra re-render\n                // data changed\n                newState.data = newData;\n            }\n            // merge the new state\n            dispatch(newState);\n            if (!shouldDeduping) {\n                // also update other hooks\n                broadcastState(key, newData, undefined);\n            }\n        }\n        catch (err) {\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n            cache.set(keyErr, err, false);\n            // get a new error\n            // don't use deep equal for errors\n            if (stateRef.current.error !== err) {\n                // we keep the stale data\n                dispatch({\n                    isValidating: false,\n                    error: err\n                });\n                if (!shouldDeduping) {\n                    // also broadcast to update other hooks\n                    broadcastState(key, undefined, err);\n                }\n            }\n            // events and retry\n            eventsRef.current.emit('onError', err, key, config);\n            if (config.shouldRetryOnError) {\n                // when retrying, we always enable deduping\n                const retryCount = (revalidateOpts.retryCount || 0) + 1;\n                eventsRef.current.emit('onErrorRetry', err, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount }));\n            }\n        }\n        loading = false;\n        return true;\n    }, [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(() => {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        const currentHookData = stateRef.current.data;\n        const latestKeyedData = cache.get(key) || config.initialData;\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key ||\n            !config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n            keyRef.current = key;\n        }\n        // revalidate with deduping\n        const softRevalidate = () => revalidate({ dedupe: true });\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined' &&\n                !IS_SERVER &&\n                window['requestIdleCallback']) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                window['requestIdleCallback'](softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        // whenever the window gets focused, revalidate\n        let onFocus;\n        if (config.revalidateOnFocus) {\n            // throttle: avoid being called twice from both listeners\n            // and tabs being switched quickly\n            onFocus = throttle(softRevalidate, config.focusThrottleInterval);\n            if (!FOCUS_REVALIDATORS[key]) {\n                FOCUS_REVALIDATORS[key] = [onFocus];\n            }\n            else {\n                FOCUS_REVALIDATORS[key].push(onFocus);\n            }\n        }\n        // register global cache update listener\n        const onUpdate = (shouldRevalidate = true, updatedData, updatedError, dedupe = true) => {\n            // update hook state\n            const newState = {};\n            let needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        // add updater to listeners\n        if (!CACHE_REVALIDATORS[key]) {\n            CACHE_REVALIDATORS[key] = [onUpdate];\n        }\n        else {\n            CACHE_REVALIDATORS[key].push(onUpdate);\n        }\n        // set up reconnecting when the browser regains network connection\n        let reconnect = null;\n        if (!IS_SERVER && window.addEventListener && config.revalidateOnReconnect) {\n            window.addEventListener('online', (reconnect = softRevalidate));\n        }\n        return () => {\n            // cleanup\n            dispatch = () => null;\n            // mark it as unmounted\n            unmountedRef.current = true;\n            if (onFocus && FOCUS_REVALIDATORS[key]) {\n                const revalidators = FOCUS_REVALIDATORS[key];\n                const index = revalidators.indexOf(onFocus);\n                if (index >= 0) {\n                    // 10x faster than splice\n                    // https://jsperf.com/array-remove-by-index\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (CACHE_REVALIDATORS[key]) {\n                const revalidators = CACHE_REVALIDATORS[key];\n                const index = revalidators.indexOf(onUpdate);\n                if (index >= 0) {\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (!IS_SERVER && window.removeEventListener && reconnect !== null) {\n                window.removeEventListener('online', reconnect);\n            }\n        };\n    }, [key, revalidate]);\n    // set up polling\n    useIsomorphicLayoutEffect(() => {\n        let timer = null;\n        const tick = async () => {\n            if (!stateRef.current.error &&\n                (config.refreshWhenHidden || isDocumentVisible()) &&\n                (config.refreshWhenOffline || isOnline())) {\n                // only revalidate when the page is visible\n                // if API request errored, we stop polling in this round\n                // and let the error retry function handle it\n                await revalidate({ dedupe: true });\n            }\n            if (config.refreshInterval) {\n                timer = setTimeout(tick, config.refreshInterval);\n            }\n        };\n        if (config.refreshInterval) {\n            timer = setTimeout(tick, config.refreshInterval);\n        }\n        return () => {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        let latestData = cache.get(key);\n        let latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    return useMemo(() => {\n        const state = { revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                }\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                }\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return stateRef.current.isValidating;\n                }\n            }\n        });\n        return state;\n    }, [revalidate]);\n}\nconst SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","export default function throttle(fn, interval) {\n    let pending = false;\n    return (...args) => {\n        if (pending)\n            return;\n        pending = true;\n        fn(...args);\n        setTimeout(() => (pending = false), interval);\n    };\n}\n","export * from './use-swr';\nimport { default as useSWR } from './use-swr';\nexport { useSWRInfinite } from './use-swr-infinite';\nexport { cache } from './config';\nexport default useSWR;\n","import { createContext } from 'react';\nconst SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","export default function isDocumentVisible() {\n    if (typeof document !== 'undefined' &&\n        typeof document.visibilityState !== 'undefined') {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n}\n","export default function isOnline() {\n    if (typeof navigator.onLine !== 'undefined') {\n        return navigator.onLine;\n    }\n    // always assume it's online\n    return true;\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}