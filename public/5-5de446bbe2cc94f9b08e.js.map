{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/swr/esm/libs/is-document-visible.js","webpack:///./node_modules/swr/esm/libs/is-online.js","webpack:///./node_modules/swr/esm/libs/hash.js","webpack:///./node_modules/swr/esm/config.js","webpack:///./node_modules/swr/esm/cache.js","webpack:///./node_modules/swr/esm/swr-config-context.js","webpack:///./node_modules/swr/esm/use-swr.js","webpack:///./node_modules/swr/esm/libs/throttle.js","webpack:///./node_modules/swr/esm/use-swr-pages.js","webpack:///./node_modules/swr/esm/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/fast-deep-equal/index.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["module","exports","require","global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","then","result","done","value","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","isDocumentVisible","document","visibilityState","isOnline","navigator","onLine","table","WeakMap","counter","cache","Cache","initialData","__cache","Map","entries","__listeners","get","_key","serializeKey","set","shouldNotify","mutate","notify","Array","from","has","clear","delete","isArray","_hash","String","hash","subscribe","listener","_this","isSubscribed","index","indexOf","_iterator","_isArray","_i","_ref","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","slowConnection","window","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","deepEqual","eventsBinded","addEventListener","SWRConfigContext","createContext","IS_SERVER","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","trigger","shouldRevalidate","_cache$serializeKey","keyErr","updaters","currentData","currentError","broadcastState","data","asyncToGenerator_default","regenerator_default","a","_callee","_data","_cache$serializeKey2","_context","Date","now","t0","t1","_x","_x2","_x3","Provider","useSWR","_cache$serializeKey3","fnArgs","assign","useContext","fetcher","initialError","stateDependencies","useRef","isValidating","stateRef","rerender","useState","dispatch","useCallback","payload","shouldUpdateState","k","current","unmountedRef","keyRef","boundMutate","_ref2","_callee2","revalidateOpts","loading","shouldDeduping","newData","startAt","newState","_context2","dedupe","_x4","currentHookData","latestKeyedData","onFocus","interval","pending","softRevalidate","revalidateOnMount","onUpdate","updatedData","updatedError","needUpdate","reconnect","revalidators","removeEventListener","_ref3","timer","tick","_callee3","_context3","clearTimeout","latestData","latestError","useMemo","defineProperties","__webpack_require__","d","__webpack_exports__","getKeys","toIObject","isEnum","f","isEntries","it","O","g","hadRuntime","getOwnPropertyNames","oldRuntime","e","keyList","hasProp","equal","b","arrA","arrB","dateA","dateB","getTime","regexpA","RegExp","regexpB","$export","$entries","S"],"mappings":"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","file":"5-5de446bbe2cc94f9b08e.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","export default function isDocumentVisible() {\n    if (typeof document !== 'undefined' &&\n        typeof document.visibilityState !== 'undefined') {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n}\n","export default function isOnline() {\n    if (typeof navigator.onLine !== 'undefined') {\n        return navigator.onLine;\n    }\n    // always assume it's online\n    return true;\n}\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    let key = 'arg';\n    for (let i = 0; i < args.length; ++i) {\n        let _hash;\n        if (args[i] === null || typeof args[i] !== 'object') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // null        -> 'null'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","import deepEqual from 'fast-deep-equal';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport Cache from './cache';\n// cache\nconst cache = new Cache();\n// state managers\nconst CONCURRENT_PROMISES = {};\nconst CONCURRENT_PROMISES_TS = {};\nconst FOCUS_REVALIDATORS = {};\nconst CACHE_REVALIDATORS = {};\nconst MUTATION_TS = {};\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (config.errorRetryCount && opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    const count = Math.min(opts.retryCount || 0, 8);\n    const timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nconst slowConnection = typeof window !== 'undefined' &&\n    navigator['connection'] &&\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nconst defaultConfig = {\n    // events\n    onLoadingSlow: () => { },\n    onSuccess: () => { },\n    onError: () => { },\n    onErrorRetry,\n    errorRetryInterval: (slowConnection ? 10 : 5) * 1000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: (slowConnection ? 5 : 3) * 1000,\n    refreshInterval: 0,\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    shouldRetryOnError: true,\n    suspense: false,\n    compare: deepEqual\n};\n// Focus revalidate\nlet eventsBinded = false;\nif (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {\n    const revalidate = () => {\n        if (!isDocumentVisible() || !isOnline())\n            return;\n        for (let key in FOCUS_REVALIDATORS) {\n            if (FOCUS_REVALIDATORS[key][0])\n                FOCUS_REVALIDATORS[key][0]();\n        }\n    };\n    window.addEventListener('visibilitychange', revalidate, false);\n    window.addEventListener('focus', revalidate, false);\n    // only bind the events once\n    eventsBinded = true;\n}\nexport { CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, CACHE_REVALIDATORS, MUTATION_TS, cache };\nexport default defaultConfig;\n","import { mutate } from './use-swr';\nimport hash from './libs/hash';\nexport default class Cache {\n    constructor(initialData = {}) {\n        this.__cache = new Map(Object.entries(initialData));\n        this.__listeners = [];\n    }\n    get(key) {\n        const [_key] = this.serializeKey(key);\n        return this.__cache.get(_key);\n    }\n    set(key, value, shouldNotify = true) {\n        const [_key] = this.serializeKey(key);\n        this.__cache.set(_key, value);\n        if (shouldNotify)\n            mutate(key, value, false);\n        this.notify();\n    }\n    keys() {\n        return Array.from(this.__cache.keys());\n    }\n    has(key) {\n        const [_key] = this.serializeKey(key);\n        return this.__cache.has(_key);\n    }\n    clear(shouldNotify = true) {\n        if (shouldNotify)\n            this.__cache.forEach(key => mutate(key, null, false));\n        this.__cache.clear();\n        this.notify();\n    }\n    delete(key, shouldNotify = true) {\n        const [_key] = this.serializeKey(key);\n        if (shouldNotify)\n            mutate(key, null, false);\n        this.__cache.delete(_key);\n        this.notify();\n    }\n    // TODO: introduce namespace for the cache\n    serializeKey(key) {\n        let args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        const errorKey = key ? 'err@' + key : '';\n        return [key, args, errorKey];\n    }\n    subscribe(listener) {\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        let isSubscribed = true;\n        this.__listeners.push(listener);\n        return () => {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            const index = this.__listeners.indexOf(listener);\n            if (index > -1) {\n                this.__listeners[index] = this.__listeners[this.__listeners.length - 1];\n                this.__listeners.length--;\n            }\n        };\n    }\n    // Notify Cache subscribers about a change in the cache\n    notify() {\n        for (let listener of this.__listeners) {\n            listener();\n        }\n    }\n}\n","import { createContext } from 'react';\nconst SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","import { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport defaultConfig, { CACHE_REVALIDATORS, CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, MUTATION_TS, cache } from './config';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport throttle from './libs/throttle';\nimport SWRConfigContext from './swr-config-context';\nconst IS_SERVER = typeof window === 'undefined';\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\nconst trigger = (_key, shouldRevalidate = true) => {\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    const [key, , keyErr] = cache.serializeKey(_key);\n    if (!key)\n        return;\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        const currentData = cache.get(key);\n        const currentError = cache.get(keyErr);\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](shouldRevalidate, currentData, currentError, i > 0);\n        }\n    }\n};\nconst broadcastState = (key, data, error) => {\n    const updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error);\n        }\n    }\n};\nconst mutate = async (_key, _data, shouldRevalidate = true) => {\n    const [key] = cache.serializeKey(_key);\n    if (!key)\n        return;\n    // if there is no new data, call revalidate against the key\n    if (typeof _data === 'undefined')\n        return trigger(_key, shouldRevalidate);\n    // update timestamp\n    MUTATION_TS[key] = Date.now() - 1;\n    let data, error;\n    if (_data && typeof _data === 'function') {\n        // `_data` is a function, call it passing current cache value\n        try {\n            data = await _data(cache.get(key));\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else if (_data && typeof _data.then === 'function') {\n        // `_data` is a promise\n        try {\n            data = await _data;\n        }\n        catch (err) {\n            error = err;\n        }\n    }\n    else {\n        data = _data;\n    }\n    if (typeof data !== 'undefined') {\n        // update cached data, avoid notifying from the cache\n        cache.set(key, data, false);\n    }\n    // update existing SWR Hooks' state\n    const updaters = CACHE_REVALIDATORS[key];\n    if (updaters) {\n        for (let i = 0; i < updaters.length; ++i) {\n            updaters[i](!!shouldRevalidate, data, error, i > 0);\n        }\n    }\n    // throw error or return data to be used by caller of mutate\n    if (error)\n        throw error;\n    return data;\n};\nfunction useSWR(...args) {\n    let _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    const [key, fnArgs, keyErr] = cache.serializeKey(_key);\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    if (typeof fn === 'undefined') {\n        // use a global fetcher\n        fn = config.fetcher;\n    }\n    const initialData = cache.get(key) || config.initialData;\n    const initialError = cache.get(keyErr);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    const stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    const stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: false\n    });\n    const rerender = useState(null)[1];\n    let dispatch = useCallback(payload => {\n        let shouldUpdateState = false;\n        for (let k in payload) {\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            rerender({});\n        }\n    }, []);\n    // error ref inside revalidate (is last request errored?)\n    const unmountedRef = useRef(false);\n    const keyRef = useRef(key);\n    const boundMutate = useCallback((data, shouldRevalidate) => {\n        return mutate(key, data, shouldRevalidate);\n    }, [key]);\n    // start a revalidation\n    const revalidate = useCallback(async (revalidateOpts = {}) => {\n        if (!key || !fn)\n            return false;\n        if (unmountedRef.current)\n            return false;\n        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n        let loading = true;\n        let shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n        // start fetching\n        try {\n            dispatch({\n                isValidating: true\n            });\n            let newData;\n            let startAt;\n            if (shouldDeduping) {\n                // there's already an ongoing request,\n                // this one needs to be deduplicated.\n                startAt = CONCURRENT_PROMISES_TS[key];\n                newData = await CONCURRENT_PROMISES[key];\n            }\n            else {\n                // if not deduping the request (hard revalidate) but\n                // there're other ongoing request(s) at the same time,\n                // we need to ignore the other result(s) to avoid\n                // possible race conditions:\n                // req1------------------>res1\n                //      req2-------->res2\n                // in that case, the second response should not be overridden\n                // by the first one.\n                if (CONCURRENT_PROMISES[key]) {\n                    // we can mark it as a mutation to ignore\n                    // all requests which are fired before this one\n                    MUTATION_TS[key] = Date.now() - 1;\n                }\n                // if no cache being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && !cache.get(key)) {\n                    setTimeout(() => {\n                        if (loading)\n                            config.onLoadingSlow(key, config);\n                    }, config.loadingTimeout);\n                }\n                if (fnArgs !== null) {\n                    CONCURRENT_PROMISES[key] = fn(...fnArgs);\n                }\n                else {\n                    CONCURRENT_PROMISES[key] = fn(key);\n                }\n                CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n                newData = await CONCURRENT_PROMISES[key];\n                setTimeout(() => {\n                    delete CONCURRENT_PROMISES[key];\n                    delete CONCURRENT_PROMISES_TS[key];\n                }, config.dedupingInterval);\n                // trigger the success event,\n                // only do this for the original request.\n                config.onSuccess(newData, key, config);\n            }\n            // if the revalidation happened earlier than the local mutation,\n            // we have to ignore the result because it could override.\n            // meanwhile, a new revalidation should be triggered by the mutation.\n            if (MUTATION_TS[key] && startAt <= MUTATION_TS[key]) {\n                dispatch({ isValidating: false });\n                return false;\n            }\n            cache.set(key, newData, false);\n            cache.set(keyErr, undefined, false);\n            // new state for the reducer\n            const newState = {\n                isValidating: false\n            };\n            if (typeof stateRef.current.error !== 'undefined') {\n                // we don't have an error\n                newState.error = undefined;\n            }\n            if (!config.compare(stateRef.current.data, newData)) {\n                // deep compare to avoid extra re-render\n                // data changed\n                newState.data = newData;\n            }\n            // merge the new state\n            dispatch(newState);\n            if (!shouldDeduping) {\n                // also update other hooks\n                broadcastState(key, newData, undefined);\n            }\n        }\n        catch (err) {\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n            cache.set(keyErr, err, false);\n            // get a new error\n            // don't use deep equal for errors\n            if (stateRef.current.error !== err) {\n                // we keep the stale data\n                dispatch({\n                    isValidating: false,\n                    error: err\n                });\n                if (!shouldDeduping) {\n                    // also broadcast to update other hooks\n                    broadcastState(key, undefined, err);\n                }\n            }\n            // events and retry\n            config.onError(err, key, config);\n            if (config.shouldRetryOnError) {\n                // when retrying, we always enable deduping\n                const retryCount = (revalidateOpts.retryCount || 0) + 1;\n                config.onErrorRetry(err, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount }));\n            }\n        }\n        loading = false;\n        return true;\n    }, [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(() => {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        const currentHookData = stateRef.current.data;\n        const latestKeyedData = cache.get(key) || config.initialData;\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key ||\n            !config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n            keyRef.current = key;\n        }\n        // revalidate with deduping\n        const softRevalidate = () => revalidate({ dedupe: true });\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined' &&\n                !IS_SERVER &&\n                window['requestIdleCallback']) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                window['requestIdleCallback'](softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        // whenever the window gets focused, revalidate\n        let onFocus;\n        if (config.revalidateOnFocus) {\n            // throttle: avoid being called twice from both listeners\n            // and tabs being switched quickly\n            onFocus = throttle(softRevalidate, config.focusThrottleInterval);\n            if (!FOCUS_REVALIDATORS[key]) {\n                FOCUS_REVALIDATORS[key] = [onFocus];\n            }\n            else {\n                FOCUS_REVALIDATORS[key].push(onFocus);\n            }\n        }\n        // register global cache update listener\n        const onUpdate = (shouldRevalidate = true, updatedData, updatedError, dedupe = true) => {\n            // update hook state\n            const newState = {};\n            let needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        // add updater to listeners\n        if (!CACHE_REVALIDATORS[key]) {\n            CACHE_REVALIDATORS[key] = [onUpdate];\n        }\n        else {\n            CACHE_REVALIDATORS[key].push(onUpdate);\n        }\n        // set up reconnecting when the browser regains network connection\n        let reconnect = null;\n        if (!IS_SERVER && window.addEventListener && config.revalidateOnReconnect) {\n            window.addEventListener('online', (reconnect = softRevalidate));\n        }\n        return () => {\n            // cleanup\n            dispatch = () => null;\n            // mark it as unmounted\n            unmountedRef.current = true;\n            if (onFocus && FOCUS_REVALIDATORS[key]) {\n                const revalidators = FOCUS_REVALIDATORS[key];\n                const index = revalidators.indexOf(onFocus);\n                if (index >= 0) {\n                    // 10x faster than splice\n                    // https://jsperf.com/array-remove-by-index\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (CACHE_REVALIDATORS[key]) {\n                const revalidators = CACHE_REVALIDATORS[key];\n                const index = revalidators.indexOf(onUpdate);\n                if (index >= 0) {\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (!IS_SERVER && window.removeEventListener && reconnect !== null) {\n                window.removeEventListener('online', reconnect);\n            }\n        };\n    }, [key, revalidate]);\n    // set up polling\n    useIsomorphicLayoutEffect(() => {\n        let timer = null;\n        const tick = async () => {\n            if (!stateRef.current.error &&\n                (config.refreshWhenHidden || isDocumentVisible()) &&\n                (config.refreshWhenOffline || isOnline())) {\n                // only revalidate when the page is visible\n                // if API request errored, we stop polling in this round\n                // and let the error retry function handle it\n                await revalidate({ dedupe: true });\n            }\n            if (config.refreshInterval) {\n                timer = setTimeout(tick, config.refreshInterval);\n            }\n        };\n        if (config.refreshInterval) {\n            timer = setTimeout(tick, config.refreshInterval);\n        }\n        return () => {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        let latestData = cache.get(key);\n        let latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    return useMemo(() => {\n        const state = { revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                }\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                }\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return stateRef.current.isValidating;\n                }\n            }\n        });\n        return state;\n    }, [revalidate]);\n}\nconst SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","export default function throttle(fn, interval) {\n    let pending = false;\n    return (...args) => {\n        if (pending)\n            return;\n        pending = true;\n        fn(...args);\n        setTimeout(() => (pending = false), interval);\n    };\n}\n","import React, { useCallback, useMemo, useState, useRef } from 'react';\nimport { cache } from './config';\n/*\nThe idea\n\nA \"Page\" component renders the content of 1 API request, it accepts an offset (in this example it's from),\nuses a SWR hook (useSWR(API + '?limit=' + limit + '&from=' + from)) and returns items (Projects).\n\nThe UI:\n      +------------------------------------------+\n      |   Projects                               |\n+------------------------------------------------------+\n|     |   +----------------+                     |     |\n|     |                                          |     |\n|     |   +------------+                         |     |\n|     |                                          |     +--> 1 Page\n|     |   +-----------------+                    |     |\n|     |                                          |     |  /projects/list?limit=4\n|     |   +---------+                            |     |\n+------------------------------------------------------+\n      |                                          |\n      |   +------------+                         |     +  /projects/list?limit=4&from=123\n      |                                          |     |\n      |   +----------------+                     |     |\n      |                                          |     |\n      |   +---------+                            |     |\n      |                                          |     |\n      |   +--------------+                       |     +\n      |                                          |\n      |   +-------------------+                  |     +  /projects/list?limit=4&from=456\n      |                                          |     |\n      |   +------------+                         |     |\n      |                                          |     |\n      |   +----------------+                     |     |\n      |                                          |     |\n      |                                          |     +\n\nThe API\n// (inside `render`)\n\nfunction App () {\n  const {\n    pages,    // an array of each page component\n    pageSWRs, // an array of SWRs of each page\n    isLoadingMore,\n    isReachingEnd,\n    isEmpty,\n    loadMore\n  } = useSWRPages(\n    'project-page', // key of this page\n\n    // ======== the actual Page component!\n    ({ offset, withSWR }) => {\n      // required: use `withSWR` to wrap your main SWR (source of your pagination API)\n      const { data } = withSWR(\n        useSWR(API + '?limit=10&from=' + offset) // request projects with offset\n      )\n      if (!data) return <Placeholder>\n      return data.projects.map(project => <Card project={project} team={team}>)\n    },\n    // ========\n\n    // a function accepts a SWR's `data`, and returns the offset of the next page (or null)\n    data => data && data.length >= 10 ? data[data.length - 1].createdAt : null,\n\n    // (optional) outside deps of your Page component. in this case it's empty\n    []\n  )\n\n  // ...\n\n  if (isEmpty) return <EmptyProjectsPage/>\n\n  return <div>\n    {pages}\n    {isReachingEnd\n      ? null\n      : <button loading={isLoadingMore} onClick={loadMore}>Load More</button>}\n  </div>\n}\n*/\nconst pageCacheMap = new Map();\nexport function useSWRPages(pageKey, pageFn, SWRToOffset, deps = []) {\n    const pageCountKey = `_swr_page_count_` + pageKey;\n    const pageOffsetKey = `_swr_page_offset_` + pageKey;\n    const [pageCount, setPageCount] = useState(cache.get(pageCountKey) || 1);\n    const [pageOffsets, setPageOffsets] = useState(cache.get(pageOffsetKey) || [null]);\n    const [pageSWRs, setPageSWRs] = useState([]);\n    const pageFnRef = useRef(pageFn);\n    const emptyPageRef = useRef(false);\n    // Page component (wraps `pageFn`)\n    // for performance reason we need to memorize it\n    const Page = useCallback(props => {\n        // render the page component\n        const dataList = pageFnRef.current(props);\n        // if dataList is [], we can assume this page is empty\n        // TODO: this API is not stable\n        if (dataList && !dataList.length) {\n            emptyPageRef.current = true;\n        }\n        else {\n            emptyPageRef.current = false;\n        }\n        return dataList;\n    }, []);\n    // Doesn't have a next page\n    const isReachingEnd = pageOffsets[pageCount] === null;\n    const isLoadingMore = pageCount === pageOffsets.length;\n    const isEmpty = isReachingEnd && pageCount === 1 && emptyPageRef.current;\n    const loadMore = useCallback(() => {\n        if (isLoadingMore || isReachingEnd)\n            return;\n        setPageCount(c => {\n            cache.set(pageCountKey, c + 1);\n            return c + 1;\n        });\n    }, [isLoadingMore || isReachingEnd]);\n    const _pageFn = useCallback(pageFn, deps);\n    pageFnRef.current = _pageFn;\n    const pages = useMemo(() => {\n        const getWithSWR = id => swr => {\n            if (!pageSWRs[id] ||\n                pageSWRs[id].data !== swr.data ||\n                pageSWRs[id].error !== swr.error ||\n                pageSWRs[id].revalidate !== swr.revalidate) {\n                // hoist side effects: setPageSWRs and setPageOffsets -- https://reactjs.org/blog/2020/02/26/react-v16.13.0.html#warnings-for-some-updates-during-render\n                setTimeout(() => {\n                    setPageSWRs(swrs => {\n                        const _swrs = [...swrs];\n                        _swrs[id] = {\n                            data: swr.data,\n                            error: swr.error,\n                            revalidate: swr.revalidate,\n                            isValidating: swr.isValidating,\n                            mutate: swr.mutate\n                        };\n                        return _swrs;\n                    });\n                    if (typeof swr.data !== 'undefined') {\n                        // set next page's offset\n                        const newPageOffset = SWRToOffset(swr, id);\n                        if (pageOffsets[id + 1] !== newPageOffset) {\n                            setPageOffsets(arr => {\n                                const _arr = [...arr];\n                                _arr[id + 1] = newPageOffset;\n                                cache.set(pageOffsetKey, _arr);\n                                return _arr;\n                            });\n                        }\n                    }\n                });\n            }\n            return swr;\n        };\n        // render each page\n        const p = [];\n        if (!pageCacheMap.has(pageKey)) {\n            pageCacheMap.set(pageKey, []);\n        }\n        const pageCache = pageCacheMap.get(pageKey);\n        for (let i = 0; i < pageCount; ++i) {\n            if (!pageCache[i] ||\n                pageCache[i].offset !== pageOffsets[i] ||\n                pageCache[i].pageFn !== _pageFn) {\n                // when props change or at init\n                // render the page and cache it\n                pageCache[i] = {\n                    component: (React.createElement(Page, { key: `page-${pageOffsets[i]}-${i}`, offset: pageOffsets[i], withSWR: getWithSWR(i) })),\n                    pageFn: _pageFn,\n                    offset: pageOffsets[i]\n                };\n            }\n            p.push(pageCache[i].component);\n        }\n        return p;\n    }, [_pageFn, pageCount, pageSWRs, pageOffsets, pageKey]);\n    return {\n        pages,\n        pageCount,\n        pageSWRs,\n        isLoadingMore,\n        isReachingEnd,\n        isEmpty,\n        loadMore\n    };\n}\n","export * from './use-swr';\nimport { default as useSWR } from './use-swr';\nexport { useSWRPages } from './use-swr-pages';\nexport { cache } from './config';\nexport default useSWR;\n","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}